name: CI/CD for Fullstack App

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Login to Github Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.CHACO_TOKEN }}
    
    - name: Build image and push
      run: |
        docker compose -f Chacobache_API/docker-compose-dev.yml build
        docker compose -f Chacobache_API/docker-compose-dev.yml push
    
  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      # 1. Clona el repositorio
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. LoguÃ©ate en el GitHub Container Registry
      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CHACO_TOKEN }}

      # 3. Ejecutar el build del frontend Angular
      - name: Build Angular App
        run: |
          cd Chacobache
          npm install
          npm run build -- --output-path=docs --base-href /chacobache_app_docker/

      # 3. Despliega el contenedor
      - name: Deploy Docker container
        run: |
          docker compose -f Chacobache_API/docker-compose-dev.yml up -d
      
      - name: Move files to root
        run: |
          if [[ -d "./docs/browser" ]]; 
            then mv ./docs/browser/* ./docs/ 
          fi
          rm -rf ./docs/browser

      # 4. Crear el archivo .nojekyll
      - name: Add .nojekyll file
        run: echo > ./docs/.nojekyll

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.CHACO_TOKEN }}
          #publish_branch: gh-pages
          publish_dir: ./docs


